<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Flappy Soccer Ball</title>
  <style>
    body { margin:0; overflow:hidden; background: #0b6623; }
    canvas { display:block; margin:0 auto; background:#0b6623; }
    #score { 
      position: absolute; 
      top: 20px; 
      left: 50%; 
      transform: translateX(-50%);
      color: #fff; 
      font: bold 32px sans-serif; 
      text-shadow: 2px 2px 0 #222;
    }
    #restart {
      display: none;
      position: absolute;
      top: 60px;
      left: 50%;
      transform: translateX(-50%);
      font: bold 24px sans-serif;
      background: #fff;
      color: #0b6623;
      border: none;
      padding: 10px 30px;
      border-radius: 10px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div id="score">0</div>
  <button id="restart">Restart</button>
  <canvas id="game" width="400" height="600"></canvas>
  <script>
    const canvas = document.getElementById('game');
    const ctx = canvas.getContext('2d');
    let soccerBallImg = new Image();
    soccerBallImg.src = 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Soccerball.svg';
    let goalImg = new Image();
    goalImg.src = 'https://upload.wikimedia.org/wikipedia/commons/9/9a/Soccer_goal.svg';

    const GRAVITY = 0.5;
    const FLAP = -8;
    const PIPE_WIDTH = 80;
    const PIPE_GAP = 160;
    const PIPE_INTERVAL = 1300; // ms
    const BALL_RADIUS = 24;

    let ball, pipes, score, gameOver, lastPipeTime;

    function startGame() {
      ball = { x: 80, y: canvas.height/2, vy: 0 };
      pipes = [];
      score = 0;
      gameOver = false;
      lastPipeTime = Date.now();
      document.getElementById('score').textContent = score;
      document.getElementById('restart').style.display = 'none';
      loop();
    }

    function flap() {
      if (gameOver) return;
      ball.vy = FLAP;
    }

    document.addEventListener('keydown', function(e) {
      if (e.code === 'Space' || e.key === ' ') flap();
    });
    canvas.addEventListener('mousedown', flap);
    canvas.addEventListener('touchstart', function(e) { e.preventDefault(); flap(); });

    document.getElementById('restart').onclick = startGame;

    function drawBall() {
      ctx.save();
      ctx.beginPath();
      ctx.arc(ball.x, ball.y, BALL_RADIUS, 0, Math.PI*2);
      ctx.closePath();
      ctx.clip();
      ctx.drawImage(soccerBallImg, ball.x-BALL_RADIUS, ball.y-BALL_RADIUS, BALL_RADIUS*2, BALL_RADIUS*2);
      ctx.restore();
    }

    function drawPipe(pipe) {
      // Draw soccer goal as pipe top and bottom
      ctx.save();
      ctx.drawImage(
        goalImg, 
        pipe.x, 
        0, 
        PIPE_WIDTH, 
        pipe.top
      );
      ctx.drawImage(
        goalImg,
        pipe.x, 
        pipe.bottom, 
        PIPE_WIDTH, 
        canvas.height - pipe.bottom
      );
      ctx.restore();
    }

    function loop() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      // Update ball
      ball.vy += GRAVITY;
      ball.y += ball.vy;

      // Add pipes
      if (Date.now() - lastPipeTime > PIPE_INTERVAL) {
        let top = Math.random() * (canvas.height - PIPE_GAP - 120) + 60;
        pipes.push({
          x: canvas.width,
          top: top,
          bottom: top + PIPE_GAP,
          passed: false
        });
        lastPipeTime = Date.now();
      }

      // Update and draw pipes
      for (let pipe of pipes) {
        pipe.x -= 2;
        drawPipe(pipe);
        // Score
        if (!pipe.passed && pipe.x + PIPE_WIDTH < ball.x) {
          score++;
          pipe.passed = true;
          document.getElementById('score').textContent = score;
        }
        // Collision
        if (
          ball.x + BALL_RADIUS > pipe.x && ball.x - BALL_RADIUS < pipe.x + PIPE_WIDTH &&
          (ball.y - BALL_RADIUS < pipe.top || ball.y + BALL_RADIUS > pipe.bottom)
        ) {
          gameOver = true;
        }
      }
      // Remove off-screen pipes
      pipes = pipes.filter(pipe => pipe.x + PIPE_WIDTH > 0);

      drawBall();

      // Floor/Ceiling collision
      if (ball.y + BALL_RADIUS > canvas.height || ball.y - BALL_RADIUS < 0) {
        gameOver = true;
      }

      if (gameOver) {
        ctx.fillStyle = 'rgba(0,0,0,0.5)';
        ctx.fillRect(0, canvas.height/2-60, canvas.width, 120);
        ctx.fillStyle = '#fff';
        ctx.font = 'bold 40px sans-serif';
        ctx.textAlign = 'center';
        ctx.fillText('Game Over', canvas.width/2, canvas.height/2);
        ctx.font = 'bold 24px sans-serif';
        ctx.fillText('Score: ' + score, canvas.width/2, canvas.height/2 + 40);
        document.getElementById('restart').style.display = 'block';
        return;
      }
      requestAnimationFrame(loop);
    }

    // Wait for images to load before starting
    let loadedCount = 0;
    soccerBallImg.onload = goalImg.onload = () => {
      loadedCount++;
      if (loadedCount === 2) startGame();
    };
  </script>
</body>
</html>